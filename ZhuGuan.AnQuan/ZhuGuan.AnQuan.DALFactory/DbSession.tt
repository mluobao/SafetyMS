<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\ZhuGuan.AnQuan.Model\\DataModel.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();
EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
#>
using System.Runtime.Remoting.Messaging;
using ZhuGuan.AnQuan.DAL;
using ZhuGuan.AnQuan.IDAL;

namespace ZhuGuan.AnQuan.DALFactory
{
	public class DbSession:IDbSession
	{
<#
foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{   
#>	
		public I<#=entity.Name#>Dal  <#=entity.Name#>Dal
		{
		    get { return StaticDalFactory.Get<#=entity.Name#>Dal(); }
		}   
<#}#>
		public int SaveChanges()
		{
			int count = DbContextFactory.GetCurrentContext().SaveChanges();
			//确保每次对数据库进行增删改都启用一个新的DbContext实例
            CallContext.SetData("DbContext", null);
			return count;
		}
	
	}
}
